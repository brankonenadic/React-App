{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\Advanced Redux\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCrtData } from './store/cartSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    if (initial) {\n      initial = false;\n      return;\n    }\n\n    dispatch(sendCrtData(cart));\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/Advanced Redux/src/App.js"],"names":["useEffect","Fragment","useSelector","useDispatch","Cart","Layout","Products","Notification","sendCrtData","initial","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","status","title","message"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,IAAIC,OAAO,GAAG,IAAd;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAAnB,CAA5B;AACA,QAAMC,IAAI,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAxB;AACA,QAAMC,YAAY,GAAGf,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASG,YAAnB,CAAhC;AAGAjB,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIS,OAAJ,EAAa;AACXA,MAAAA,OAAO,GAAG,KAAV;AACA;AACD;;AACDE,IAAAA,QAAQ,CAACH,WAAW,CAACQ,IAAD,CAAZ,CAAR;AACD,GAPQ,EAON,CAACA,IAAD,EAAOL,QAAP,CAPM,CAAT;AASA,sBACE,QAAC,QAAD;AAAA,eACGM,YAAY,iBAAI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,YAAY,CAACC,MAAnC;AAA2C,MAAA,KAAK,EAAED,YAAY,CAACE,KAA/D;AAAsE,MAAA,OAAO,EAAEF,YAAY,CAACG;AAA5F;AAAA;AAAA;AAAA;AAAA,YADnB,eAEE,QAAC,MAAD;AAAA,iBACGR,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzBQF,G;UACUP,W,EACAD,W,EACJA,W,EACQA,W;;;KAJdQ,G;AA2BT,eAAeA,GAAf","sourcesContent":["import { useEffect, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCrtData } from './store/cartSlice';\n\nlet initial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  \n\n  useEffect(() => {\n\n    if (initial) {\n      initial = false;\n      return;\n    }\n    dispatch(sendCrtData(cart));\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && <Notification status={notification.status} title={notification.title} message={notification.message} />}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}