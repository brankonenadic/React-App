{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react';\n\nconst useHttp = (requestConfing, applayData) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfing.url, {\n        method: requestConfing.method ? requestConfing.method : 'GET',\n        headers: requestConfing.headers ? requestConfing.method : {},\n        body: requestConfing.body ? JSON.stringify(requestConfing.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applayData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/04-onwards-to-a-more-realistic-example/src/hooks/http-request.js"],"names":["React","useState","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","useHttp","requestConfing","applayData","isLoading","setIsLoading","error","setError","sendRequest","taskText","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,kDAAT,QAAmE,OAAnE;;AAEA,MAAMC,OAAO,GAAG,CAACC,cAAD,EAAiBC,UAAjB,KAAgC;AAAA;;AAC5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAGA,QAAMS,WAAW,GAAI,MAAOC,QAAP,IAAoB;AACvCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1BT,cAAc,CAACU,GADW,EACN;AAClBC,QAAAA,MAAM,EAAEX,cAAc,CAACW,MAAf,GAAwBX,cAAc,CAACW,MAAvC,GAAgD,KADtC;AAElBC,QAAAA,OAAO,EAAEZ,cAAc,CAACY,OAAf,GAAyBZ,cAAc,CAACW,MAAxC,GAAiD,EAFxC;AAGlBE,QAAAA,IAAI,EAAEb,cAAc,CAACa,IAAf,GAAsBC,IAAI,CAACC,SAAL,CAAef,cAAc,CAACa,IAA9B,CAAtB,GAA4D;AAHhD,OADM,CAA5B;;AAMA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAlB,MAAAA,UAAU,CAACiB,IAAD,CAAV;AAED,KAdD,CAcE,OAAOE,GAAP,EAAY;AACZf,MAAAA,QAAQ,CAACe,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDlB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArBD;;AAuBF,SAAO;AACLD,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAjCD;;GAAMP,O;;AAmCN,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react';\r\n\r\nconst useHttp = (requestConfing, applayData) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n  \r\n    const sendRequest =  async (taskText) => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(\r\n          requestConfing.url, {\r\n            method: requestConfing.method ? requestConfing.method : 'GET',\r\n            headers: requestConfing.headers ? requestConfing.method : {},\r\n            body: requestConfing.body ? JSON.stringify(requestConfing.body) : null,\r\n          });\r\n        if (!response.ok) {\r\n          throw new Error('Request failed!');\r\n        }\r\n  \r\n        const data = await response.json();\r\n        applayData(data);\r\n \r\n      } catch (err) {\r\n        setError(err.message || 'Something went wrong!');\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest\r\n  };\r\n}\r\n\r\nexport default useHttp\r\n"]},"metadata":{},"sourceType":"module"}