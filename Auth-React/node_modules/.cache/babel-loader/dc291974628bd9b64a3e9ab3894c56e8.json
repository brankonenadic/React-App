{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\Auth-React\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedI: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const userIsLogIn = !!token;\n\n  const logInHandler = () => {\n    setToken(token);\n  };\n\n  const logOutHandler = () => {\n    setToken(null);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLogIn,\n    login: logInHandler,\n    logout: logOutHandler\n  };\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/Auth-React/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedI","login","logout","AuthContextProvider","props","setToken","userIsLogIn","logInHandler","logOutHandler","contextValue","isLoggedIn","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,KAAK,EAAE,EAD6B;AAEpCC,EAAAA,SAAS,EAAE,KAFyB;AAGpCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAG,CAHe;AAIpCG,EAAAA,MAAM,EAAE,MAAM,CAAG;AAJmB,CAApB,CAApB;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMU,WAAW,GAAG,CAAC,CAACP,KAAtB;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACvBF,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMS,aAAa,GAAG,MAAM;AACxBH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG;AACjBV,IAAAA,KAAK,EAAEA,KADU;AAEjBW,IAAAA,UAAU,EAAEJ,WAFK;AAGjBL,IAAAA,KAAK,EAAEM,YAHU;AAIjBL,IAAAA,MAAM,EAAEM;AAJS,GAArB;AAMA;;AACA;AAAA,UAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cAA4CL,KAAK,CAACO;AAAlD;AAAA;AAAA;AAAA;AAAA;AACH,CAjBM;;GAAMR,mB;;KAAAA,mB;AAkBb,eAAeN,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedI: false,\r\n    login: (token) => { },\r\n    logout: () => { }\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [token, setToken] = useState(null);\r\n    const userIsLogIn = !!token;\r\n    const logInHandler = () => {\r\n        setToken(token);\r\n    };\r\n    const logOutHandler = () => {\r\n        setToken(null);\r\n    };\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLogIn,\r\n        login: logInHandler,\r\n        logout: logOutHandler\r\n    };\r\n    return\r\n    <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>;\r\n};\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}