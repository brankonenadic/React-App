{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\Auth-React\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    setIsLoading(true);\n\n    if (isLogin) {} else {\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA_7gon5wLU-7yN6nQHEt8uejZOF6ApOXU', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {} else {\n          return res.json().then(data => {\n            let errorMessage = 'Authentacion failed!';\n\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailRef,\n          type: \"email\",\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordRef,\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"off\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"R9bBVecIX0SjsDaM0Z3KYw/TyD4=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/Auth-React/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","emailRef","passwordRef","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading , setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    setIsLoading(true);\n    if (isLogin) {\n\n    } else {\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA_7gon5wLU-7yN6nQHEt8uejZOF6ApOXU', {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      }).then(res => {\n        setIsLoading(false);\n        if (res.ok) {\n\n        } else {\n          return res.json().then(data => {\n            let errorMessage = 'Authentacion failed!'\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n          });\n        }\n      })\n    }\n\n  };\n  return (\n    <section className={classes.auth} onSubmit={submitHandler}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input ref={emailRef} type='email' id='email' required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input ref={passwordRef} type='password' id='password' autoComplete=\"off\" required />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}