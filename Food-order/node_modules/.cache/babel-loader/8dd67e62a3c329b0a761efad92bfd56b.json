{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\Food-order\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [orderState, setOrderState] = useState(false);\n  const [isSubmit, setIsSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    setOrderState(true);\n  };\n\n  const submitOrderHandler = userDAta => {\n    fetch('https://food-order-3594b-default-rtdb.europe-west1.firebasedatabase.app/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userDAta,\n        orderItems: cartCtx.items\n      })\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 24\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), orderState && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this), !orderState && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"qth1xnvFulOVKabiVhNiNMVIVOM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/Food-order/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","CartItem","classes","CartContext","Checkout","Cart","props","orderState","setOrderState","isSubmit","setIsSubmit","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderHandler","submitOrderHandler","userDAta","fetch","method","body","JSON","stringify","user","orderItems","cartItems","map","name","amount","price","bind","modalActions","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\n\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\n\nconst Cart = (props) => {\n  const [orderState, setOrderState] = useState(false);\n  const [isSubmit, setIsSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem(item);\n  };\n  const orderHandler = () => {\n    setOrderState(true);\n  }\n  const submitOrderHandler =  (userDAta) => {\n    fetch('https://food-order-3594b-default-rtdb.europe-west1.firebasedatabase.app/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userDAta,\n        orderItems: cartCtx.items\n      })\n\n    });\n  }\n\n  const cartItems = (\n    <ul className={classes['cart-items']}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n  const modalActions = <div className={classes.actions}>\n    <button className={classes['button--alt']} onClick={props.onClose}>\n      Close\n    </button>\n    {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\n  </div>;\n\n  return (\n    <Modal onClose={props.onClose}>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {orderState && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\n      {!orderState && modalActions}\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}