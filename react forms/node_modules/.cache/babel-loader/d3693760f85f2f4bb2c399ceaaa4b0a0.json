{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\react forms\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useNewInput from '../hooks/use-newInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: nameValue,\n    inputHasEror: nameInpuHasError,\n    isValid: nameIsValid,\n    inputHandler: nameHandler,\n    inputBlur: nameInputBlur,\n    ressetInput: resetNameInput\n  } = useNewInput(value => value.trim() !== '');\n  const {\n    value: lastNameValue,\n    inputHasEror: lastNameInpuHasError,\n    isValid: lastNameIsValid,\n    inputHandler: lastNameHandler,\n    inputBlur: lastNameInputBlur,\n    ressetInput: resetLastNameInput\n  } = useNewInput(value => value.trim() !== '');\n  let formIsValid = false;\n\n  if (nameIsValid && lastNameIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n\n    if (nameInpuHasError && lastNameInputHasError) {\n      formIsValid = false;\n    }\n\n    console.log(nameValue);\n    resetNameInput();\n    resetLastNameInput();\n  };\n\n  const nameInputClass = !nameInpuHasError ? 'form-control' : 'form-control invalid';\n  const lastNameInputClass = !lastNameInpuHasError ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onBlur: nameInputBlur,\n          onChange: nameHandler,\n          value: nameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), nameInpuHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: ['error-text'],\n          children: \"Enter Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"emai\\u010D\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"c/i9L95Xu+/AUGRo80UpYls3hp0=\", false, function () {\n  return [useNewInput, useNewInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/react forms/src/components/BasicForm.js"],"names":["useNewInput","BasicForm","props","value","nameValue","inputHasEror","nameInpuHasError","isValid","nameIsValid","inputHandler","nameHandler","inputBlur","nameInputBlur","ressetInput","resetNameInput","trim","lastNameValue","lastNameInpuHasError","lastNameIsValid","lastNameHandler","lastNameInputBlur","resetLastNameInput","formIsValid","formSubmitHandler","e","preventDefault","lastNameInputHasError","console","log","nameInputClass","lastNameInputClass"],"mappings":"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","sourcesContent":["import useNewInput from '../hooks/use-newInput'\nconst BasicForm = (props) => {\n\n  const { value: nameValue, inputHasEror: nameInpuHasError, isValid: nameIsValid, inputHandler: nameHandler, inputBlur: nameInputBlur, ressetInput: resetNameInput } = useNewInput(value => value.trim() !== '');\n  const { value: lastNameValue, inputHasEror: lastNameInpuHasError, isValid: lastNameIsValid, inputHandler: lastNameHandler, inputBlur: lastNameInputBlur, ressetInput: resetLastNameInput } = useNewInput(value => value.trim() !== '');\n\n  let formIsValid = false;\n  if (nameIsValid && lastNameIsValid) {\n    formIsValid = true;\n  }\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    if (nameInpuHasError && lastNameInputHasError) {\n      formIsValid = false;\n    }\n\n    console.log(nameValue);\n    resetNameInput();\n    resetLastNameInput();\n  }\n  const nameInputClass = !nameInpuHasError ? 'form-control' : 'form-control invalid';\n  const lastNameInputClass = !lastNameInpuHasError ? 'form-control' : 'form-control invalid';\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className='control-group'>\n        <div className={nameInputClass}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' onBlur={nameInputBlur} onChange={nameHandler} value={nameValue} />\n          {nameInpuHasError && <p className={['error-text']}>Enter Your Name</p>}\n        </div>\n\n        <div className='form-control'>\n          <label htmlFor='lastName'>Last Name</label>\n          <input type='text' id='lastName' />\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='emaič'>E-Mail Address</label>\n        <input type='email' id='email' />\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}