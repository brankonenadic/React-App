{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputValue, setInputValue] = useState();\n  const [inputThached, setInputThched] = useState(false);\n  const inputIsValid = validateValue(inputValue);\n  const hasError = !inputIsValid && inputThached;\n\n  const inputHandler = e => {\n    setInputValue(e.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setInputThched(true);\n  };\n\n  const reset = () => {\n    setInputValue('');\n    setInputThched(false);\n  };\n\n  return {\n    value: inputValue,\n    hasError,\n    isValid: inputIsValid,\n    inputHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"A3LOkO6itzDDKwOXzxa9Uy/J0Z4=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/react forms/src/hooks/use-input.js"],"names":["useState","useInput","validateValue","inputValue","setInputValue","inputThached","setInputThched","inputIsValid","hasError","inputHandler","e","target","value","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,EAA5C;AACA,QAAM,CAACK,YAAD,EAAeC,cAAf,IAAiCN,QAAQ,CAAC,KAAD,CAA/C;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,UAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,YAAlC;;AAEA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AACxBN,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAEH,GAHD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BP,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAGA,QAAMQ,KAAK,GAAG,MAAM;AAChBV,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAHD;;AAIA,SAAO;AACHM,IAAAA,KAAK,EAAET,UADJ;AAEHK,IAAAA,QAFG;AAGHO,IAAAA,OAAO,EAAER,YAHN;AAIHE,IAAAA,YAJG;AAKHI,IAAAA,gBALG;AAMHC,IAAAA;AANG,GAAP;AAQH,CA1BD;;GAAMb,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react'\r\n\r\nconst useInput = (validateValue) => {\r\n    const [inputValue, setInputValue] = useState();\r\n    const [inputThached, setInputThched] = useState(false);\r\n\r\n    const inputIsValid = validateValue(inputValue);\r\n    const hasError = !inputIsValid && inputThached;\r\n\r\n    const inputHandler = (e) => {\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n    const inputBlurHandler = () => {\r\n        setInputThched(true);\r\n    }\r\n    const reset = () => {\r\n        setInputValue('');\r\n        setInputThched(false);\r\n    }\r\n    return {\r\n        value: inputValue,\r\n        hasError,\r\n        isValid: inputIsValid,\r\n        inputHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n}\r\n\r\nexport default useInput\r\n"]},"metadata":{},"sourceType":"module"}