{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\react forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  // const regName = /^[A-žÀ-ÿš ]+$/;\n  const regEmail = /^[a-z]+[0-9a-zA-Z_.]*@[a-z_]+.[a-z]+$/;\n  const {\n    value: enteredName,\n    hasError: nameInputError,\n    isValid: nameInputIsValid,\n    inputHandler: nameInputHandler,\n    reset: nameInputReset,\n    inputBlurHandler: nameInputBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    hasError: emailInputError,\n    isValid: emailInputIsValid,\n    inputHandler: emailInputHandler,\n    reset: emailInputReset,\n    inputBlurHandler: emailInputBlurHandler\n  } = useInput(value => regEmail.test(value));\n  ;\n  let formIsValid = false;\n\n  if (nameInputIsValid && emailInputIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n\n    if (!nameInputError && !emailInputError) {\n      formIsValid = false;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n    nameInputReset();\n    emailInputReset();\n  };\n\n  const inputNameClass = !nameInputError ? 'form-control' : 'form-control invalid';\n  const inputEmailClass = !emailInputError ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputNameClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), nameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Enter Valid Name !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputEmailClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Enter Valid Email !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleInput, \"Dge4cuo8RlcZSYkFPIvGNOKKlFA=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n/* import { useRef, useState } from 'react'\r\n\r\nconst SimpleInput = (props) => {\r\n    const inputRef = useRef();\r\n    const [enteredNameInput, setEnteredNameInput] = useState('');\r\n    const [inputIsValid, setInputIsValid] = useState(true);\r\n\r\n    const enteredNameInputHandler = (e) => {\r\n        setEnteredNameInput(e.target.value);\r\n        setInputIsValid(true);\r\n    }\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (enteredNameInput.trim() === '') {\r\n            setInputIsValid(false);\r\n            return;\r\n        }\r\n        setInputIsValid(true);\r\n        console.log(enteredNameInput);\r\n        console.log(inputRef.current.value);\r\n        setEnteredNameInput('');\r\n\r\n    }\r\n    const inputClass = inputIsValid ? 'form-control' : 'form-control invalid';\r\n    return (\r\n        <form onSubmit={formSubmitHandler}>\r\n            <div className={inputClass}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input ref={inputRef} type='text' id='name' onChange={enteredNameInputHandler} value={enteredNameInput} />\r\n            </div>\r\n            {!inputIsValid && <p className='error-text'>Enter Your name !!!</p>}\r\n            <div className=\"form-actions\">\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput; */\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/react forms/src/components/SimpleInput.js"],"names":["useInput","SimpleInput","props","regEmail","value","enteredName","hasError","nameInputError","isValid","nameInputIsValid","inputHandler","nameInputHandler","reset","nameInputReset","inputBlurHandler","nameInputBlurHandler","trim","enteredEmail","emailInputError","emailInputIsValid","emailInputHandler","emailInputReset","emailInputBlurHandler","test","formIsValid","formSubmitHandler","e","preventDefault","console","log","inputNameClass","inputEmailClass"],"mappings":"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","sourcesContent":["\r\nimport useInput from '../hooks/use-input';\r\n\r\nconst SimpleInput = (props) => {\r\n\r\n    // const regName = /^[A-žÀ-ÿš ]+$/;\r\n    const regEmail = /^[a-z]+[0-9a-zA-Z_.]*@[a-z_]+.[a-z]+$/;\r\n    const { value: enteredName,\r\n        hasError: nameInputError,\r\n        isValid: nameInputIsValid,\r\n        inputHandler: nameInputHandler,\r\n        reset: nameInputReset,\r\n        inputBlurHandler: nameInputBlurHandler } = useInput(value => value.trim() !== '');\r\n    const { value: enteredEmail,\r\n        hasError: emailInputError,\r\n        isValid: emailInputIsValid,\r\n        inputHandler: emailInputHandler,\r\n        reset: emailInputReset,\r\n        inputBlurHandler: emailInputBlurHandler} = useInput(value => regEmail.test(value));;\r\n\r\n\r\n    let formIsValid = false;\r\n\r\n    if (nameInputIsValid && emailInputIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n    \r\n        if (!nameInputError && !emailInputError) {\r\n            formIsValid = false;\r\n\r\n        }\r\n\r\n        console.log(enteredName);\r\n        console.log(enteredEmail);\r\n        nameInputReset();\r\n        emailInputReset();\r\n    }\r\n    const inputNameClass = !nameInputError ? 'form-control' : 'form-control invalid';\r\n    const inputEmailClass = !emailInputError ? 'form-control' : 'form-control invalid';\r\n    return (\r\n        <form onSubmit={formSubmitHandler}>\r\n            <div className={inputNameClass}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input type='text' id='name' onChange={nameInputHandler}\r\n                    onBlur={nameInputBlurHandler} value={enteredName} />\r\n            </div>\r\n            {nameInputError && <p className='error-text'>Enter Valid Name !!!</p>}\r\n            <div className={inputEmailClass}>\r\n                <label htmlFor='email'>Your Email</label>\r\n                <input type='email' id='email' onChange={emailInputHandler}\r\n                    onBlur={emailInputBlurHandler} value={enteredEmail} />\r\n            </div>\r\n            {emailInputError && <p className='error-text'>Enter Valid Email !!!</p>}\r\n            <div className=\"form-actions\">\r\n                <button disabled={!formIsValid}>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput;\r\n\r\n\r\n\r\n/* import { useRef, useState } from 'react'\r\n\r\nconst SimpleInput = (props) => {\r\n    const inputRef = useRef();\r\n    const [enteredNameInput, setEnteredNameInput] = useState('');\r\n    const [inputIsValid, setInputIsValid] = useState(true);\r\n\r\n    const enteredNameInputHandler = (e) => {\r\n        setEnteredNameInput(e.target.value);\r\n        setInputIsValid(true);\r\n    }\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (enteredNameInput.trim() === '') {\r\n            setInputIsValid(false);\r\n            return;\r\n        }\r\n        setInputIsValid(true);\r\n        console.log(enteredNameInput);\r\n        console.log(inputRef.current.value);\r\n        setEnteredNameInput('');\r\n\r\n    }\r\n    const inputClass = inputIsValid ? 'form-control' : 'form-control invalid';\r\n    return (\r\n        <form onSubmit={formSubmitHandler}>\r\n            <div className={inputClass}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input ref={inputRef} type='text' id='name' onChange={enteredNameInputHandler} value={enteredNameInput} />\r\n            </div>\r\n            {!inputIsValid && <p className='error-text'>Enter Your name !!!</p>}\r\n            <div className=\"form-actions\">\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput; */\r\n"]},"metadata":{},"sourceType":"module"}