{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\react forms\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useNewInput from '../hooks/use-newInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const regName = /^[A-žÀ-ÿš ]+$/;\n  const regEmail = /^[a-z]+[0-9a-zA-Z_.]*@[a-z_]+.[a-z]+$/;\n  const {\n    value: nameValue,\n    inputHasEror: nameInpuHasError,\n    isValid: nameIsValid,\n    inputHandler: nameHandler,\n    inputBlur: nameInputBlur,\n    ressetInput: resetNameInput\n  } = useNewInput(value => value.trim() !== '' && regName.test(value));\n  const {\n    value: lastNameValue,\n    inputHasEror: lastNameInpuHasError,\n    isValid: lastNameIsValid,\n    inputHandler: lastNameHandler,\n    inputBlur: lastNameInputBlur,\n    ressetInput: resetLastNameInput\n  } = useNewInput(value => value.trim() !== '' && regName.test(value));\n  const {\n    value: emailValue,\n    inputHasEror: emailInpuHasError,\n    isValid: emailIsValid,\n    inputHandler: emailHandler,\n    inputBlur: emailInputBlur,\n    ressetInput: resetEmailInput\n  } = useNewInput(value => value.trim() !== '' && regEmail.test(value));\n  let formIsValid = false;\n\n  if (nameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n\n    if (nameInpuHasError && lastNameInpuHasError && emailInpuHasError) {\n      formIsValid = false;\n    }\n\n    console.log(nameValue);\n    console.log(lastNameValue);\n    console.log(emailValue);\n    resetNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClass = !nameInpuHasError ? 'form-control' : 'form-control invalid';\n  const lastNameInputClass = !lastNameInpuHasError ? 'form-control' : 'form-control invalid';\n  const emailInputClass = !emailInpuHasError ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onBlur: nameInputBlur,\n          onChange: nameHandler,\n          value: nameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), nameInpuHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: ['error-text'],\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Enter Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onBlur: lastNameInputBlur,\n          onChange: lastNameHandler,\n          value: lastNameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), lastNameInpuHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: ['error-text'],\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Enter Your Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"emai\\u010D\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onBlur: emailInputBlur,\n        onChange: emailHandler,\n        value: emailValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), emailInpuHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: ['error-text'],\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Enter Valid Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"VuSJzdO28SNmBYjEumUJWvzJ1Lw=\", false, function () {\n  return [useNewInput, useNewInput, useNewInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/react forms/src/components/BasicForm.js"],"names":["useNewInput","BasicForm","props","regName","regEmail","value","nameValue","inputHasEror","nameInpuHasError","isValid","nameIsValid","inputHandler","nameHandler","inputBlur","nameInputBlur","ressetInput","resetNameInput","trim","test","lastNameValue","lastNameInpuHasError","lastNameIsValid","lastNameHandler","lastNameInputBlur","resetLastNameInput","emailValue","emailInpuHasError","emailIsValid","emailHandler","emailInputBlur","resetEmailInput","formIsValid","formSubmitHandler","e","preventDefault","console","log","nameInputClass","lastNameInputClass","emailInputClass"],"mappings":"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","sourcesContent":["import useNewInput from '../hooks/use-newInput'\nconst BasicForm = (props) => {\n  const regName = /^[A-žÀ-ÿš ]+$/;\n  const regEmail = /^[a-z]+[0-9a-zA-Z_.]*@[a-z_]+.[a-z]+$/;\n\n  const { \n          value: nameValue,\n          inputHasEror: nameInpuHasError,\n          isValid: nameIsValid,\n          inputHandler: nameHandler,\n          inputBlur: nameInputBlur,\n          ressetInput: resetNameInput\n      } = useNewInput(value => value.trim() !== '' && regName.test(value));\n  const { \n    value: lastNameValue,\n     inputHasEror: lastNameInpuHasError,\n      isValid: lastNameIsValid,\n       inputHandler: lastNameHandler,\n        inputBlur: lastNameInputBlur,\n         ressetInput: resetLastNameInput \n        } = useNewInput(value => value.trim() !== '' && regName.test(value));\n  const { \n    value: emailValue,\n     inputHasEror: emailInpuHasError,\n      isValid: emailIsValid,\n       inputHandler: emailHandler,\n        inputBlur: emailInputBlur,\n         ressetInput: resetEmailInput\n         } = useNewInput(value => value.trim() !== '' && regEmail.test(value));\n\n\n\n  let formIsValid = false;\n  if (nameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    if (nameInpuHasError && lastNameInpuHasError && emailInpuHasError) {\n      formIsValid = false;\n    }\n\n    console.log(nameValue);\n    console.log(lastNameValue);\n    console.log(emailValue);\n\n    resetNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  }\n  const nameInputClass = !nameInpuHasError ? 'form-control' : 'form-control invalid';\n  const lastNameInputClass = !lastNameInpuHasError ? 'form-control' : 'form-control invalid';\n  const emailInputClass = !emailInpuHasError ? 'form-control' : 'form-control invalid';\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className='control-group'>\n        <div className={nameInputClass}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' onBlur={nameInputBlur} onChange={nameHandler} value={nameValue} />\n          {nameInpuHasError && <p className={['error-text']}><small>Enter Your Name</small></p>}\n        </div>\n\n        <div className={lastNameInputClass}>\n          <label htmlFor='lastName'>Last Name</label>\n          <input type='text' id='lastName' onBlur={lastNameInputBlur} onChange={lastNameHandler} value={lastNameValue} />\n          {lastNameInpuHasError && <p className={['error-text']}><small>Enter Your Last name</small></p>}\n        </div>\n      </div>\n      <div className={emailInputClass}>\n        <label htmlFor='emaič'>E-Mail Address</label>\n        <input type='email' id='email' onBlur={emailInputBlur} onChange={emailHandler} value={emailValue} />\n        {emailInpuHasError && <p className={['error-text']}><small>Enter Valid Email</small></p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}