{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\react forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredNameInput, setEnteredNameInput] = useState('');\n  const [inputNameTuched, setInputNameTuched] = useState(false);\n  const enteredNameIsValid = enteredNameInput.trim() !== '';\n  const nameInputIsValid = !enteredNameIsValid && inputNameTuched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const enteredNameInputHandler = e => {\n    setEnteredNameInput(e.target.value);\n  };\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n\n    if (enteredNameIsValid) {\n      formIsValid = false;\n    }\n\n    setInputIsValid(true);\n    console.log(enteredNameInput);\n    setEnteredNameInput('');\n  };\n\n  const inputClass = inputIsValid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: enteredNameInputHandler,\n        value: enteredNameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), !enteredNameInput && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Enter Your name !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleInput, \"s7a/DBBC6pQFWgnX25XIgYt+5fg=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n/* import { useRef, useState } from 'react'\r\n\r\nconst SimpleInput = (props) => {\r\n    const inputRef = useRef();\r\n    const [enteredNameInput, setEnteredNameInput] = useState('');\r\n    const [inputIsValid, setInputIsValid] = useState(true);\r\n\r\n    const enteredNameInputHandler = (e) => {\r\n        setEnteredNameInput(e.target.value);\r\n        setInputIsValid(true);\r\n    }\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (enteredNameInput.trim() === '') {\r\n            setInputIsValid(false);\r\n            return;\r\n        }\r\n        setInputIsValid(true);\r\n        console.log(enteredNameInput);\r\n        console.log(inputRef.current.value);\r\n        setEnteredNameInput('');\r\n\r\n    }\r\n    const inputClass = inputIsValid ? 'form-control' : 'form-control invalid';\r\n    return (\r\n        <form onSubmit={formSubmitHandler}>\r\n            <div className={inputClass}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input ref={inputRef} type='text' id='name' onChange={enteredNameInputHandler} value={enteredNameInput} />\r\n            </div>\r\n            {!inputIsValid && <p className='error-text'>Enter Your name !!!</p>}\r\n            <div className=\"form-actions\">\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput; */\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/react forms/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredNameInput","setEnteredNameInput","inputNameTuched","setInputNameTuched","enteredNameIsValid","trim","nameInputIsValid","formIsValid","enteredNameInputHandler","e","target","value","formSubmitHandler","preventDefault","setInputIsValid","console","log","inputClass","inputIsValid"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,KAAD,CAAtD;AAGA,QAAMO,kBAAkB,GAAGJ,gBAAgB,CAACK,IAAjB,OAA4B,EAAvD;AACA,QAAMC,gBAAgB,GAAG,CAACF,kBAAD,IAAuBF,eAAhD;AAEA,MAAIK,WAAW,GAAG,KAAlB;;AAEA,MAAIH,kBAAJ,EAAwB;AACpBG,IAAAA,WAAW,GAAG,IAAd;AACH;;AAED,QAAMC,uBAAuB,GAAIC,CAAD,IAAO;AACnCR,IAAAA,mBAAmB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AAEH,GAHD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIT,kBAAJ,EAAwB;AACpBG,MAAAA,WAAW,GAAG,KAAd;AAEH;;AACDO,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,gBAAZ;AAEAC,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AAEH,GAXD;;AAYA,QAAMgB,UAAU,GAAGC,YAAY,GAAG,cAAH,GAAoB,sBAAnD;AACA,sBACI;AAAM,IAAA,QAAQ,EAAEN,iBAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEK,UAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAET,uBAAvC;AAAgE,QAAA,KAAK,EAAER;AAAvE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKK,CAACA,gBAAD,iBAAqB;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAL1B,eAMI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAQ,QAAA,QAAQ,EAAE,CAACO,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA5CD;;GAAMT,W;;KAAAA,W;AA8CN,eAAeA,WAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState } from 'react'\r\n\r\nconst SimpleInput = (props) => {\r\n\r\n    const [enteredNameInput, setEnteredNameInput] = useState('');\r\n    const [inputNameTuched, setInputNameTuched] = useState(false);\r\n   \r\n\r\n    const enteredNameIsValid = enteredNameInput.trim() !== '';\r\n    const nameInputIsValid = !enteredNameIsValid && inputNameTuched;\r\n\r\n    let formIsValid = false;\r\n\r\n    if (enteredNameIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const enteredNameInputHandler = (e) => {\r\n        setEnteredNameInput(e.target.value);\r\n        \r\n    }\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (enteredNameIsValid) {\r\n            formIsValid = false;\r\n\r\n        }\r\n        setInputIsValid(true);\r\n        console.log(enteredNameInput);\r\n     \r\n        setEnteredNameInput('');\r\n\r\n    }\r\n    const inputClass = inputIsValid ? 'form-control' : 'form-control invalid';\r\n    return (\r\n        <form onSubmit={formSubmitHandler}>\r\n            <div className={inputClass}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input type='text' id='name' onChange={enteredNameInputHandler} value={enteredNameInput} />\r\n            </div>\r\n            {!enteredNameInput && <p className='error-text'>Enter Your name !!!</p>}\r\n            <div className=\"form-actions\">\r\n                <button disabled={!formIsValid}>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput;\r\n\r\n\r\n\r\n/* import { useRef, useState } from 'react'\r\n\r\nconst SimpleInput = (props) => {\r\n    const inputRef = useRef();\r\n    const [enteredNameInput, setEnteredNameInput] = useState('');\r\n    const [inputIsValid, setInputIsValid] = useState(true);\r\n\r\n    const enteredNameInputHandler = (e) => {\r\n        setEnteredNameInput(e.target.value);\r\n        setInputIsValid(true);\r\n    }\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (enteredNameInput.trim() === '') {\r\n            setInputIsValid(false);\r\n            return;\r\n        }\r\n        setInputIsValid(true);\r\n        console.log(enteredNameInput);\r\n        console.log(inputRef.current.value);\r\n        setEnteredNameInput('');\r\n\r\n    }\r\n    const inputClass = inputIsValid ? 'form-control' : 'form-control invalid';\r\n    return (\r\n        <form onSubmit={formSubmitHandler}>\r\n            <div className={inputClass}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input ref={inputRef} type='text' id='name' onChange={enteredNameInputHandler} value={enteredNameInput} />\r\n            </div>\r\n            {!inputIsValid && <p className='error-text'>Enter Your name !!!</p>}\r\n            <div className=\"form-actions\">\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SimpleInput; */\r\n"]},"metadata":{},"sourceType":"module"}