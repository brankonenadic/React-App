{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useNewInput = validateValue => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [inputThached, setInputThached] = useState(false);\n  const valueIsValid = validateValue(inputValue);\n  const inputHasEror = valueIsValid && inputThached;\n\n  const inputHandler = e => {\n    setInputValue(e.target.value);\n  };\n\n  const inputBlur = () => {\n    if (!inputHasEror) {\n      setInputThached(false);\n    } else {\n      setInputThached(true);\n    }\n  };\n\n  const ressetInput = () => {\n    setInputValue('');\n    setInputThached(false);\n  };\n\n  return {\n    value: inputValue,\n    inputHasEror,\n    valueIsValid,\n    inputHandler,\n    inputBlur,\n    ressetInput\n  };\n};\n\n_s(useNewInput, \"JUbr/K+lyx3JJnarAw+TqdQqHa0=\");\n\nexport default useNewInput;","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/react forms/src/hooks/use-newInput.js"],"names":["useState","useNewInput","validateValue","inputValue","setInputValue","inputThached","setInputThached","valueIsValid","inputHasEror","inputHandler","e","target","value","inputBlur","ressetInput"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,WAAW,GAAIC,aAAD,IAAmB;AAAA;;AAEvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,UAAD,CAAlC;AACA,QAAMK,YAAY,GAAGD,YAAY,IAAIF,YAArC;;AAEA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AACxBN,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAEH,GAHD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAI,CAACL,YAAL,EAAmB;AACfF,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAFH,MAES;AACLA,MAAAA,eAAe,CAAC,IAAD,CAAf;AACE;AAGT,GARD;;AASA,QAAMQ,WAAW,GAAG,MAAM;AACtBV,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAHD;;AAKI,SAAO;AACHM,IAAAA,KAAK,EAAET,UADJ;AAEHK,IAAAA,YAFG;AAGHD,IAAAA,YAHG;AAIHE,IAAAA,YAJG;AAKHI,IAAAA,SALG;AAMHC,IAAAA;AANG,GAAP;AAQH,CAlCD;;GAAMb,W;;AAoCN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useNewInput = (validateValue) => {\r\n\r\nconst [inputValue, setInputValue] = useState('');\r\nconst [inputThached, setInputThached] = useState(false);\r\n\r\nconst valueIsValid = validateValue(inputValue);\r\nconst inputHasEror = valueIsValid && inputThached;\r\n\r\nconst inputHandler = (e) => {\r\n    setInputValue(e.target.value);\r\n    \r\n}\r\nconst inputBlur = () => {\r\n    if (!inputHasEror) {\r\n        setInputThached(false);\r\n      } else {\r\n        setInputThached(true);\r\n         }\r\n    \r\n    \r\n}\r\nconst ressetInput = () => {\r\n    setInputValue('');\r\n    setInputThached(false);\r\n}\r\n\r\n    return {\r\n        value: inputValue,\r\n        inputHasEror,\r\n        valueIsValid,\r\n        inputHandler,\r\n        inputBlur,\r\n        ressetInput\r\n    };\r\n}\r\n\r\nexport default useNewInput\r\n"]},"metadata":{},"sourceType":"module"}