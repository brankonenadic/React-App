{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst currentState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  currentState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    incrementes(state) {},\n\n    decrement(state) {},\n\n    toggle(state) {}\n\n  }\n});\n\nconst counterReducer = (state = currentState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'incrementes') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;\n/* import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst currentState = {counter: 0, showCounter: true};\r\n\r\nconst counterReducer = (state = currentState, action) => {\r\n    if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if (action.type === 'incrementes') {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'toggle') {\r\n      return {\r\n        counter: state.counter,\r\n        showCounter: !state.showCounter\r\n       };\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store; */","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/React-Redux/src/store/index.js"],"names":["createStore","createSlice","currentState","counter","showCounter","name","reducers","increment","state","incrementes","decrement","toggle","counterReducer","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB;AAEAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAFU;AAGVI,EAAAA,QAAQ,EAAC;AACPC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,OAAN;AACD,KAHM;;AAIPM,IAAAA,WAAW,CAACD,KAAD,EAAQ,CAAE,CAJd;;AAKPE,IAAAA,SAAS,CAACF,KAAD,EAAQ,CAAE,CALZ;;AAMPG,IAAAA,MAAM,CAACH,KAAD,EAAQ,CAAE;;AANT;AAHC,CAAD,CAAX;;AAaA,MAAMI,cAAc,GAAG,CAACJ,KAAK,GAAGN,YAAT,EAAuBW,MAAvB,KAAkC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AACjC,WAAO;AACLX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AACD,MAAIS,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,WAAO;AACLX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBU,MAAM,CAACE,MAD3B;AAELX,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AACC,MAAIS,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFhB,KAAP;AAIH;;AACD,MAAIS,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OADV;AAELC,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ;AAFf,KAAP;AAID;;AACD,SAAOI,KAAP;AACH,CA1BD;;AA4BA,MAAMQ,KAAK,GAAGhB,WAAW,CAACY,cAAD,CAAzB;AAEA,eAAeI,KAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst currentState = {counter: 0, showCounter: true};\r\n\r\ncreateSlice({\r\n  name: 'counter',\r\n  currentState,\r\n  reducers:{\r\n    increment(state) {\r\n      state.counter++\r\n    },\r\n    incrementes(state) {},\r\n    decrement(state) {},\r\n    toggle(state) {}\r\n  }\r\n});\r\n\r\nconst counterReducer = (state = currentState, action) => {\r\n    if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if (action.type === 'incrementes') {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'toggle') {\r\n      return {\r\n        counter: state.counter,\r\n        showCounter: !state.showCounter\r\n       };\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n\r\n/* import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst currentState = {counter: 0, showCounter: true};\r\n\r\nconst counterReducer = (state = currentState, action) => {\r\n    if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if (action.type === 'incrementes') {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'toggle') {\r\n      return {\r\n        counter: state.counter,\r\n        showCounter: !state.showCounter\r\n       };\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store; */"]},"metadata":{},"sourceType":"module"}