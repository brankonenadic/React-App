{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuth: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {}\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;\n/* import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst currentState = {counter: 0, showCounter: true};\r\n\r\nconst counterReducer = (state = currentState, action) => {\r\n    if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if (action.type === 'incrementes') {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'toggle') {\r\n      return {\r\n        counter: state.counter,\r\n        showCounter: !state.showCounter\r\n       };\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store; */","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/React-Redux/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuth","authSlice","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KANO;;AAORS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAkBA,MAAMY,gBAAgB,GAAG;AACvBC,EAAAA,MAAM,EAAE;AADe,CAAzB;AAIA,MAAMC,SAAS,GAAIlB,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,YAAY,EAAES,gBAFe;AAG7BR,EAAAA,QAAQ,EAAE;AAHmB,CAAD,CAA9B;AAQA,MAAMW,KAAK,GAAGlB,cAAc,CAAC;AAC3BmB,EAAAA,OAAO,EAAEf,YAAY,CAACe;AADK,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGhB,YAAY,CAACiB,OAApC;AAEP,eAAeH,KAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    }\r\n  }\r\n});\r\nconst initialAuthState = {\r\n  isAuth: false\r\n};\r\n\r\nconst authSlice =  createSlice({\r\n  name: 'auth',\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    \r\n  }\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n\r\n/* import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst currentState = {counter: 0, showCounter: true};\r\n\r\nconst counterReducer = (state = currentState, action) => {\r\n    if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if (action.type === 'incrementes') {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'toggle') {\r\n      return {\r\n        counter: state.counter,\r\n        showCounter: !state.showCounter\r\n       };\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store; */"]},"metadata":{},"sourceType":"module"}