{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\Practice project3\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = [{\n  id: 'q1',\n  author: 'Jana',\n  text: 'Love lirning React !'\n}, {\n  id: 'q2',\n  author: 'Selma',\n  text: 'Exercising is fun !'\n}, {\n  id: 'q3',\n  author: 'Marija',\n  text: 'Time is for shopping !'\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedData,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedData || loadedData.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DUMMY_DATA\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllQuotes, \"cwzAUdoU1ZTvsQxHtC096fjAWLU=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/Practice project3/src/pages/AllQuotes.js"],"names":["useEffect","QuoteList","LoadingSpinner","NoQuotesFound","useHttp","getAllQuotes","DUMMY_DATA","id","author","text","AllQuotes","sendRequest","status","data","loadedData","error","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,UAAU,GAAG,CACf;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAGIC,EAAAA,IAAI,EAAE;AAHV,CADe,EAMf;AACIF,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,MAAM,EAAE,OAFZ;AAGIC,EAAAA,IAAI,EAAE;AAHV,CANe,EAWf;AACIF,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,MAAM,EAAE,QAFZ;AAGIC,EAAAA,IAAI,EAAE;AAHV,CAXe,CAAnB;;AAiBA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,UAA7B;AAAyCC,IAAAA;AAAzC,MAAmDX,OAAO,CAACC,YAAD,EAAe,IAAf,CAAhE;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAGA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACtB,wBAAQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAA0B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AACD,MAAIG,KAAJ,EAAW;AACP,wBAAQ;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AACD,MAAIH,MAAM,KAAK,WAAX,KAA2B,CAACE,UAAD,IAAeA,UAAU,CAACE,MAAX,KAAsB,CAAhE,CAAJ,EAAwE;AACpE,wBAAQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAA0B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AACD,sBACI,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEV;AAAnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAjBD;;GAAMI,S;UACuDN,O;;;KADvDM,S;AAmBN,eAAeA,SAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst DUMMY_DATA = [\r\n    {\r\n        id: 'q1',\r\n        author: 'Jana',\r\n        text: 'Love lirning React !',\r\n    },\r\n    {\r\n        id: 'q2',\r\n        author: 'Selma',\r\n        text: 'Exercising is fun !',\r\n    },\r\n    {\r\n        id: 'q3',\r\n        author: 'Marija',\r\n        text: 'Time is for shopping !',\r\n    }\r\n];\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, data: loadedData, error } = useHttp(getAllQuotes, true);\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n    if (status === 'pending') {\r\n        return (<div className=\"centered\"><LoadingSpinner /></div>);\r\n    }\r\n    if (error) {\r\n        return (<p className=\"centered focused\">{error}</p>);\r\n    }\r\n    if (status === 'completed' && (!loadedData || loadedData.length === 0)) {\r\n        return (<div className=\"centered\"><NoQuotesFound /></div>);\r\n    }\r\n    return (\r\n        <QuoteList quotes={DUMMY_DATA} />\r\n    )\r\n}\r\n\r\nexport default AllQuotes\r\n"]},"metadata":{},"sourceType":"module"}