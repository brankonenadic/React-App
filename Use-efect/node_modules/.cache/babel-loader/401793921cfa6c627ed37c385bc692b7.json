{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\Use-efect\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n/* import userEvent from '@testing-library/user-event'; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'PASS_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'PASS_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  /* const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState(); */\n\n  /*  const [enteredPassword, setEnteredPassword] = useState('');\n   const [passwordIsValid, setPasswordIsValid] = useState(); */\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n  useEffect(() => {\n    console.log('EFFECT1 RUNNING');\n    return () => {\n      console.log('EFFECT1 CLEANUP');\n    };\n  }, []); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Checking form validity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    /* setEnteredEmail(event.target.value); */\n\n    setFormIsValid(event.target.value.includes('@') && passwordState.value.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'PASS_INPUT',\n      val: event.target.value\n    });\n    /* setEnteredPassword(event.target.value); */\n\n    /* \n        setFormIsValid(\n          emailState.value.includes('@') && event.target.value.trim().length > 6\n        ); */\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n    /* setEmailIsValid(emailState.isValid.includes('@')); */\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'PASS_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"RXkzW1tbYRMDdSirwDtE5Hq+n28=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/Use-efect/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","console","log","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA;;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AACLC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GADT;AAELC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWE,QAAX,CAAoB,GAApB;AAFJ,KAAP;AAID;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AACLC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KADR;AAELE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYG,QAAZ,CAAqB,GAArB;AAFJ,KAAP;AAID;;AACD,SAAO;AACLH,IAAAA,KAAK,EAAE,EADF;AAELE,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAjBD;;AAkBA,MAAME,eAAe,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACzC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AACLC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GADT;AAELC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWI,IAAX,GAAkBC,MAAlB,GAA2B;AAF/B,KAAP;AAID;;AACD,MAAIR,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KADR;AAELE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYK,IAAZ,GAAmBC,MAAnB,GAA4B;AAFhC,KAAP;AAID;;AACD,SAAO;AACLN,IAAAA,KAAK,EAAE,EADF;AAELE,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAjBD;;AAmBA,MAAMK,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB;AACF;;AACC;AACD;AACE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BpB,UAAU,CAACI,YAAD,EAAe;AAAEI,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAf,CAA9C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAOA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCxB,UAAU,CAACY,eAAD,EAAkB;AAAEJ,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAlB,CAApD;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT,CAlBuB,CA2BvB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMG,kBAAkB,GAAIC,KAAD,IAAW;AAEpCN,IAAAA,aAAa,CAAC;AAACb,MAAAA,IAAI,EAAE,YAAP;AAAqBE,MAAAA,GAAG,EAAEiB,KAAK,CAACC,MAAN,CAAanB;AAAvC,KAAD,CAAb;AACA;;AAEAU,IAAAA,cAAc,CACZQ,KAAK,CAACC,MAAN,CAAanB,KAAb,CAAmBG,QAAnB,CAA4B,GAA5B,KAAoCY,aAAa,CAACf,KAAd,CAAoBK,IAApB,GAA2BC,MAA3B,GAAoC,CAD5D,CAAd;AAGD,GARD;;AAUA,QAAMc,qBAAqB,GAAIF,KAAD,IAAW;AACvCF,IAAAA,gBAAgB,CAAC;AAACjB,MAAAA,IAAI,EAAE,YAAP;AAAqBE,MAAAA,GAAG,EAAEiB,KAAK,CAACC,MAAN,CAAanB;AAAvC,KAAD,CAAhB;AACA;;AACJ;AACA;AACA;AACA;AACG,GAPD;;AASA,QAAMqB,oBAAoB,GAAG,MAAM;AACjCT,IAAAA,aAAa,CAAC;AAACb,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAb;AACA;AACD,GAHD;;AAKA,QAAMuB,uBAAuB,GAAG,MAAM;AACpCN,IAAAA,gBAAgB,CAAC;AAACjB,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAhB;AACD,GAFD;;AAIA,QAAMwB,aAAa,GAAIL,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACM,cAAN;AACAhB,IAAAA,KAAK,CAACiB,OAAN,CAAcd,UAAU,CAACX,KAAzB,EAAgCe,aAAa,CAACf,KAA9C;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEN,OAAO,CAACgC,KAAzB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEH,aAAhB;AAAA,8BACE;AACE,QAAA,SAAS,EAAG,GAAE7B,OAAO,CAACiC,OAAQ,IAAGhB,UAAU,CAACT,OAAX,KAAuB,KAAvB,GAA+BR,OAAO,CAACkC,OAAvC,GAAiD,EAC/E,EAFL;AAAA,gCAIE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,KAAK,EAAEjB,UAAU,CAACX,KAHpB;AAIE,UAAA,QAAQ,EAAEiB,kBAJZ;AAKE,UAAA,MAAM,EAAEI;AALV;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AACE,QAAA,SAAS,EAAG,GAAE3B,OAAO,CAACiC,OAAQ,IAAGZ,aAAa,CAACb,OAAd,KAA0B,KAA1B,GAAkCR,OAAO,CAACkC,OAA1C,GAAoD,EAClF,EAFL;AAAA,gCAIE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,KAAK,EAAEb,aAAa,CAACf,KAHvB;AAIE,UAAA,QAAQ,EAAEoB,qBAJZ;AAKE,UAAA,MAAM,EAAEE;AALV;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eA2BE;AAAK,QAAA,SAAS,EAAE5B,OAAO,CAACmC,OAAxB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEnC,OAAO,CAACoC,GAAzC;AAA8C,UAAA,QAAQ,EAAE,CAACrB,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CA/GD;;GAAMF,K;;KAAAA,K;AAiHN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n/* import userEvent from '@testing-library/user-event'; */\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    }\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }\n  }\n  return {\n    value: '',\n    isValid: false\n  }\n}\nconst passwordReducer = (state, action) => {\n  if (action.type === 'PASS_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    }\n  }\n  if (action.type === 'PASS_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    }\n  }\n  return {\n    value: '',\n    isValid: false\n  }\n}\n\nconst Login = (props) => {\n  /* const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState(); */\n /*  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState(); */\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, { value: '', isValid: false});\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, { value: '', isValid: false});\n\n  useEffect(() => {\n    console.log('EFFECT1 RUNNING');\n\n    return () => {\n      console.log('EFFECT1 CLEANUP');\n    };\n  }, []);\n\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('Checking form validity!');\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //   return () => {\n  //     console.log('CLEANUP');\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n    /* setEnteredEmail(event.target.value); */\n\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.value.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'PASS_INPUT', val: event.target.value});\n    /* setEnteredPassword(event.target.value); */\n/* \n    setFormIsValid(\n      emailState.value.includes('@') && event.target.value.trim().length > 6\n    ); */\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n    /* setEmailIsValid(emailState.isValid.includes('@')); */\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'PASS_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${emailState.isValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${passwordState.isValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}