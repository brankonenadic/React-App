{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\Http Request\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fachMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transforMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        releaseDate: movieData.release_date,\n        openingText: movieData.opening_crawl\n      };\n    });\n    setMovies(transforMovies);\n    setIsLoading(false);\n  }\n  /* const fachMoviesHandler = () => {\n    fetch('https://swapi.dev/api/films/').then(response => {\n      return response.json();\n    }).then(data => {\n      const transforMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl\n        }\n      });\n      setMovies(transforMovies);\n    })\n  }\n   */\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fachMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  }, \"Loading....\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/Http Request/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","fachMoviesHandler","response","fetch","data","json","transforMovies","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAaC,YAAb,IAA6BN,QAAQ,CAAC,KAAD,CAA3C;;AAEA,iBAAeO,iBAAf,GAAmC;AACjCD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,UAAMC,cAAc,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;AACnD,aAAO;AACLC,QAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,QAAAA,WAAW,EAAEJ,SAAS,CAACK,YAHlB;AAILC,QAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,OAAP;AAMD,KAPsB,CAAvB;AAQAlB,IAAAA,SAAS,CAACQ,cAAD,CAAT;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AAGD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,IAAcF,MAAM,CAACoB,MAAP,gBAAiB,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEpB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlC,EAEGE,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFhB,CAJF,CADF;AAWD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading , setIsLoading] = useState(false);\n\n  async function fachMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n\n    const transforMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        releaseDate: movieData.release_date,\n        openingText: movieData.opening_crawl\n      }\n    });\n    setMovies(transforMovies);\n    setIsLoading(false);\n  }\n\n\n  /* const fachMoviesHandler = () => {\n    fetch('https://swapi.dev/api/films/').then(response => {\n      return response.json();\n    }).then(data => {\n      const transforMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl\n        }\n      });\n      setMovies(transforMovies);\n    })\n  }\n   */\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fachMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length >  <MoviesList movies={movies} />}\n        {isLoading && <p>Loading....</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}