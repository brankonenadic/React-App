{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\Practice project2\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deafultCartStae = {\n  items: [],\n  amount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateItems = state.items.concat(action.item);\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item;\n  }\n\n  return deafultCartStae;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispachCart] = useReducer(cartReducer, deafultCartStae);\n\n  const addItemToCartToHandler = item => {\n    dispachCart({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispachCart({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartToHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"uFEuRFPf8CN/PC7RZNxNMsHga9o=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/Practice project2/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","deafultCartStae","items","amount","cartReducer","state","action","type","updateItems","concat","item","updateTotalAmount","totalAmount","price","CartProvider","props","cartState","dispachCart","addItemToCartToHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,MAAM,EAAE;AAFY,CAAxB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAASC,MAAT,KAAoB;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMC,iBAAiB,GAAGN,KAAK,CAACO,WAAN,GAAoBN,MAAM,CAACI,IAAP,CAAYG,KAAZ,GAAoBP,MAAM,CAACI,IAAzE;AACH;;AACD,SAAOT,eAAP;AACH,CAND;;AAQA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAaC,WAAb,IAA4BlB,UAAU,CAACK,WAAD,EAAcH,eAAd,CAA5C;;AACC,QAAMiB,sBAAsB,GAAIR,IAAD,IAAU;AACrCO,IAAAA,WAAW,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAX;AACH,GAFD;;AAGA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,WAAW,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAX;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBU,IAAAA,WAAW,EAAEI,SAAS,CAACJ,WAFP;AAGhBU,IAAAA,OAAO,EAAEJ,sBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBD;;GAAMV,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport { useReducer } from 'react'\r\nimport CartContext from './cart-context'\r\n\r\nconst deafultCartStae = {\r\n    items: [],\r\n    amount: 0\r\n}\r\n\r\nconst cartReducer = (state , action) => {\r\n    if (action.type === 'ADD') {\r\n        const updateItems = state.items.concat(action.item);\r\n        const updateTotalAmount = state.totalAmount + action.item.price * action.item\r\n    }\r\n    return deafultCartStae;\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n   const [cartState , dispachCart] = useReducer(cartReducer, deafultCartStae);\r\n    const addItemToCartToHandler = (item) => {\r\n        dispachCart({type: 'ADD', item: item});\r\n    }\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispachCart({type: 'REMOVE', id: id});\r\n    }\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartToHandler,\r\n        removeItem: removeItemFromCartHandler\r\n    }\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider\r\n"]},"metadata":{},"sourceType":"module"}