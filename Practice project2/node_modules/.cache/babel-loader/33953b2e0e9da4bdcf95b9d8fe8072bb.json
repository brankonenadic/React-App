{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\brankonenadic\\\\github\\\\React-App\\\\Practice project2\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext } from 'react';\nimport Modal from '../Ui/Modal';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport CartItem from './CartItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItem = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    c;\n  };\n\n  const catItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: catItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 91\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), hasItem && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/Practice project2/src/components/Cart/Cart.js"],"names":["React","useContext","Modal","classes","CartContext","CartItem","Cart","props","cartCtx","totalAmount","toFixed","hasItem","items","length","cartItemRemoveHandler","id","c","catItemAddHandler","item","addItem","amount","cartItems","map","name","price","bind","onClose","total","actions","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAMC,OAAO,GAAGP,UAAU,CAACG,WAAD,CAA1B;AACA,QAAMK,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,OAAO,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAvC;;AAEA,QAAMC,qBAAqB,GAAIC,EAAD,IAAQ;AAClCC,IAAAA,CAAC;AACJ,GAFD;;AAGA,QAAMC,iBAAiB,GAAIC,IAAD,IAAU;AAChCV,IAAAA,OAAO,CAACW,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAAUE,MAAAA,MAAM,EAAE;AAAlB,KAAhB;AACH,GAFD;;AAIA,QAAMC,SAAS,gBAAG;AAAI,IAAA,SAAS,EAAElB,OAAO,CAAC,YAAD,CAAtB;AAAA,cAAuCK,OAAO,CAACI,KAAR,CAAcU,GAAd,CAAmBJ,IAAD,iBAAW,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA,IAAI,CAACK,IAAnC;AAAyC,MAAA,MAAM,EAAEL,IAAI,CAACE,MAAtD;AAA8D,MAAA,KAAK,EAAEF,IAAI,CAACM,KAA1E;AAAiF,MAAA,QAAQ,EAAEV,qBAAqB,CAACW,IAAtB,CAA2B,IAA3B,EAAiCP,IAAI,CAACH,EAAtC,CAA3F;AAAsI,MAAA,KAAK,EAAEE,iBAAiB,CAACQ,IAAlB,CAAuB,IAAvB,EAA6BP,IAA7B;AAA7I,OAAeA,IAAI,CAACH,EAApB;AAAA;AAAA;AAAA;AAAA,YAA7B;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAlB;;AACA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAER,KAAK,CAACmB,OAAtB;AAAA,eACKL,SADL,eAEI;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACwB,KAAxB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOlB;AAAP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACyB,OAAxB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAEzB,OAAO,CAAC,aAAD,CAA1B;AAA2C,QAAA,OAAO,EAAEI,KAAK,CAACmB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKf,OAAO,iBAAI;AAAQ,QAAA,SAAS,EAAER,OAAO,CAAC0B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA1BD;;GAAMvB,I;;KAAAA,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport { useContext } from 'react';\r\nimport Modal from '../Ui/Modal';\r\nimport classes from './Cart.module.css'\r\nimport CartContext from '../../store/cart-context';\r\nimport CartItem from './CartItem'\r\n\r\nconst Cart = (props) => {\r\n    const cartCtx = useContext(CartContext);\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n    const hasItem = cartCtx.items.length > 0;\r\n\r\n    const cartItemRemoveHandler = (id) => {\r\n        c\r\n    };\r\n    const catItemAddHandler = (item) => {\r\n        cartCtx.addItem({...item, amount: 1});\r\n    };\r\n\r\n    const cartItems = <ul className={classes['cart-items']}>{cartCtx.items.map((item) => (<CartItem key={item.id} name={item.name} amount={item.amount} price={item.price} onRemove={cartItemRemoveHandler.bind(null, item.id)} onAdd={catItemAddHandler.bind(null, item)} />))}</ul>;\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n            {cartItems}\r\n            <div className={classes.total}>\r\n                <span>Total Amount:</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n                {hasItem && <button className={classes.button}>Order</button>}\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n"]},"metadata":{},"sourceType":"module"}